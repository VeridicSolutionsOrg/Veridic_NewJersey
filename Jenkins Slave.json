{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description":"NBV, LIQUID Template | Create Jenkins EC2 for use as slave",
    "Parameters": {
        "VPC": {
            "Description": "Choose which VPC the Application Load Balancer should be deployed to",
            "Type": "AWS::EC2::VPC::Id",
            "Default": ""
        },
        "InstanceType": {
            "Description": "EC2 instance types",
            "Type": "String",
            "Default": "t2.small",
            "AllowedValues": [
                "t1.micro",
                "t2.nano",
                "t2.micro",
                "t2.small",
                "t2.medium",
                "t2.large",
                "m1.small",
                "m1.medium",
                "m1.large",
                "m1.xlarge",
                "m2.xlarge",
                "m2.2xlarge",
                "m2.4xlarge",
                "m3.medium",
                "m3.large",
                "m3.xlarge",
                "m3.2xlarge",
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "m4.4xlarge",
                "m4.10xlarge",
                "c1.medium",
                "c1.xlarge",
                "c3.large",
                "c3.xlarge",
                "c3.2xlarge",
                "c3.4xlarge",
                "c3.8xlarge",
                "c4.large",
                "c4.xlarge",
                "c4.2xlarge",
                "c4.4xlarge",
                "c4.8xlarge",
                "g2.2xlarge",
                "g2.8xlarge",
                "r3.large",
                "r3.xlarge",
                "r3.2xlarge",
                "r3.4xlarge",
                "r3.8xlarge",
                "i2.xlarge",
                "i2.2xlarge",
                "i2.4xlarge",
                "i2.8xlarge",
                "d2.xlarge",
                "d2.2xlarge",
                "d2.4xlarge",
                "d2.8xlarge",
                "hi1.4xlarge",
                "hs1.8xlarge",
                "cr1.8xlarge",
                "cc2.8xlarge",
                "cg1.4xlarge"
            ],
            "ConstraintDescription": "It must be a valid EC2 instance type."
        },
        "AMI": {
            "Description": "CIS Image encrypted  | Enter the ami-id (Amazon machine Image ID) to be used in the EC2 instances",
            "Type": "AWS::EC2::Image::Id",
            "Default": "ami-d58380aa",
            "ConstraintDescription": "It must be a valid ami-id (Amazon machine Image ID)."
        },
        "KeyName": {
            "Description": "The EC2 Key Pair to allow SSH access to the instances",
            "Type": "AWS::EC2::KeyPair::KeyName",
            "ConstraintDescription": "It must be the name of an existing EC2 KeyPair."
        },
        "privateSubnet": {
            "Description": "PRIVATE | Input the subnetID to launch the second group of instances with an elb assosiated",
            "Type": "AWS::EC2::Subnet::Id",
            "Default": "subnet-******,subnet-******"
        }
},
    "Resources" : {
        "JenkinsRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [{
                  "Effect": "Allow",
                  "Principal": {
                    "Service": [ "ec2.amazonaws.com" ]
                  },
                  "Action": ["sts:AssumeRole"]
                }]
              },
              "Path": "/",
              "Policies": [{
                "PolicyName": "JenkinsRolePolicy",
                "PolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [{
                    "Effect": "Allow",
                    "Action": "ec2:*",
                    "Resource": "*"
                  },
                  {
                    "Effect": "Allow",
                    "Action": "iam:*",
                    "Resource": "*"
                    }
                  ]
                }
              }]
            }
          },
          "JenkinsInstanceProfile": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
              "Path": "/",
              "Roles": [{
                "Ref": "JenkinsRole"
              }]
            }
          },
"JenkinsEc2Instance": {
    "Type": "AWS::EC2::Instance",
    "Properties": {

        "KeyName": {
            "Ref": "KeyName"
        },
        "InstanceType": {
            "Ref": "InstanceType"
        },
        "SecurityGroupIds": [{
            "Ref": "JenkinsSecurityGroup"
        }],
        "ImageId": {
            "Ref": "AMI"
        },
        "IamInstanceProfile": {
            "Ref": "JenkinsInstanceProfile"
          },
        "SubnetId": {
            "Ref": "privateSubnet"
        },
        "Tags": [
      {
        "Key": "Name",
        "Value": "NBV_STAGE_JENKINS"
      } ],
"UserData": {
    "Fn::Base64": {
        "Fn::Join": [
         "",
         [
         "#!/usr/bin/env bash\n",
        "sudo useradd -u 1000 jenkins\n",

        "# install java 8\n",
        "sudo yum -y remove java-1.7.0-openjdk\n",
        "sudo yum install -y java-1.8.0\n",

        "# install docker nginx and jenkins\n",
        "sudo yum update -y\n",
        "sudo yum install git -y\n",
        "sudo yum -y install python-pip\n",
        "sudo pip install ansible\n",
        "sudo pip install boto3\n",
        "sudo yum install -y docker\n",
        "sudo service docker start\n",
        "sudo usermod -a -G docker jenkins\n",
        
        "# ok!\n",

        "sudo mkdir /home/jenkins/.ssh\n",

        "echo \"\n",

        "# NBV DevOps Pub Key below...\n",
        "<pub key>",

        "\" | sudo tee /home/jenkins/.ssh/authorized_keys\n",

        "sudo chown -R jenkins:jenkins /home/jenkins/.ssh\n",
        "sudo chmod 600 /home/jenkins/.ssh/authorized_keys\n"
        ]
    ]

    }
  }

    }
},
"JenkinsSecurityGroup": {
    "Type": "AWS::EC2::SecurityGroup",
    "Properties": {
      "GroupDescription": "Enable SSH access and HTTP from anywhere",
      "VpcId": {
        "Ref": "VPC"
      },
      "SecurityGroupIngress": [
      {
          "IpProtocol": "tcp",
          "FromPort": "22",
          "ToPort": "22",
          "CidrIp": "10.0.0.0/8"
       },
       {
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "10.79.0.0/16"
       },
     {
      "IpProtocol": "tcp",
      "FromPort": "22",
      "ToPort": "22",
      "CidrIp": "10.94.225.127/32"
     }]
    }
  }
}
}